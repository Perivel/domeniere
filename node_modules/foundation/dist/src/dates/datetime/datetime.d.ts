import 'moment-timezone';
import { DateTimeInterface } from "./datetime.interface";
import { Equatable } from "./../../common/common.module";
import { Timezone } from "./../../geography/geography.module";
import { Timestamp } from './../timestamp/timestamp';
export declare class DateTime implements DateTimeInterface, Equatable {
    private date;
    private tz;
    constructor(value: Date, timezone?: Timezone);
    static Now(timezone?: Timezone): DateTime;
    static FromTimestamp(timestamp: Timestamp, timezone?: Timezone): DateTime;
    addDays(numDays: number): DateTime;
    addHours(numHours: number): DateTime;
    addMinutes(numMinutes: number): DateTime;
    addMonths(numMonths: number): DateTime;
    addYears(numYears: number): DateTime;
    day(): number;
    isAfter(suspect: any): boolean;
    isBefore(suspect: any): boolean;
    equals(suspect: any): boolean;
    month(): number;
    subtractDays(numDays: number): DateTime;
    subtractHours(numHours: number): DateTime;
    subtractMinutes(numMinutes: number): DateTime;
    subtractMonths(numMonths: number): DateTime;
    subtractYears(numYears: number): DateTime;
    timezone(): Timezone;
    toUtc(): DateTime;
    toTimezone(timezone: Timezone): DateTime;
    utcString(): string;
    value(): Date;
    year(): number;
    private getMomentDate;
}
//# sourceMappingURL=datetime.d.ts.map
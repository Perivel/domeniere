import { StackNode } from './stack-node';
export class Stack {
    constructor() {
        this._top = null;
        this._count = 0;
    }
    clear() {
        this._top = null;
        this._count = 0;
    }
    isEmpty() {
        return this.size() === 0;
    }
    peek() {
        let value = null;
        if (!this.isEmpty()) {
            const top = this._top;
            value = top.value();
        }
        return value;
    }
    pop() {
        let value = null;
        if (!this.isEmpty()) {
            const nodeToRemove = this._top;
            this._top = nodeToRemove.next();
            this._count--;
            value = nodeToRemove.value();
        }
        return value;
    }
    push(value) {
        if (this.isEmpty()) {
            const newNode = new StackNode(value);
            this._top = newNode;
        }
        else {
            const newTop = new StackNode(value, this._top);
            this._top = newTop;
        }
        this._count++;
    }
    size() {
        return this._count;
    }
    toArray() {
        const arr = new Array();
        let currentNode = this._top;
        while (currentNode != null) {
            arr.push(currentNode.value());
            currentNode = currentNode.next();
        }
        return arr;
    }
}

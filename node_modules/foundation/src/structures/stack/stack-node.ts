import { StackNodeInterface } from "./stack-node.interface";



export class StackNode<T> implements StackNodeInterface<T> {
    private readonly _value: T;
    private readonly _next: StackNode<T> | null;

    constructor(value: T, next: StackNode<T> | null = null) {
        this._value = value;
        this._next = next;
    }

    /**
     * next()
     * 
     * next() gets the next node.
     */

    public next(): StackNode<T> | null {
        return this._next;
    }

    /**
     * value()
     * 
     * value() gets the value the node is holding.
     */

    public value(): T {
        return this._value;
    }
}